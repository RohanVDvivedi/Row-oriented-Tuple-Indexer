
Stage 1
 * review / refactor merge functions
   * review size calculations for parent insert tuples
   * make can_merge function to a static functions
 * implement bplus_tree delete function

STAGE 1.1
 * implement bplus_tree update function (* at a latter stage)

Stage 2
 * implement a page_list and a page_cursor interface to read leaf pages list or any page list
   * insert only if tail locked with write, i.e. insert only at the tail
   * read page with seek_page only in one direction
 * use this page_cursor interface to enable range search queries for b+ trees
 * implement support range search and delete queries

STAGE 3
 * external_merge_sort for the page_list
 * reverse a sorted page list
 * building a bplus_tree on top of an external_merge_sorted page_list, in multiple runs until there is only 1 page in the tree

STAGE 4
 * hash_index

STAGE 5
 * persistent storage using bufferpool library, providing a simple data_access_methods